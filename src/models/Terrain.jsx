/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody, HeightfieldCollider } from "@react-three/rapier";

export default function Terrain(props) {
	const { nodes, materials } = useGLTF("/texturedTerrain.glb");
	const terrainRef = useGLTF("/texturedTerrain.glb");

	const geometry = terrainRef.scene.children[0].geometry;
	const vertices = geometry.getAttribute("position").array; // Extract vertices (Float32)
	const cols = Math.sqrt(vertices.length); // assuming square grid
	const rows = 1; // adjust this based on your terrain's scale
	// console.log(vertices);

	return (
		<group {...props} dispose={null}>
			<RigidBody type="fixed" colliders={false} friction={15}>
				{/* <HeightfieldCollider args={[vertices, 1, 2, 3.0]} /> */}
				<mesh
					// ref={terrainRef}
					castShadow
					receiveShadow
					geometry={nodes.mesh_0.geometry}
					material={nodes.mesh_0.material}
				/>
			</RigidBody>
		</group>
	);
}

useGLTF.preload("/texturedTerrain.glb");
