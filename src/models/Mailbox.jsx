/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useRef } from "react";
import { useGLTF, useAnimations, useCursor, Html } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";

import { useModalContext } from "../components/context/ModalContext";
import { useHoverContext } from "../components/context/HoverContext";
import ModalText from "../components/experience/ModalText";

export default function Mailbox(props) {
	const group = useRef();
	const { nodes, materials, animations } = useGLTF("/prunedMailbox.glb");
	const { actions } = useAnimations(animations, group);

	const [hovered, setHovered] = useState();
	const { signSelected, setSignSelected } = useModalContext();
	const { hoverText, setHoverText } = useHoverContext();
	const [mailboxText, setMailboxText] = useState("");

	useCursor(hovered);

	return (
		<group ref={group} {...props} dispose={null}>
			{mailboxText === "mailbox" && (
				<Html center position={[-7, 13, 327]}>
					<div
						style={{ userSelect: "none" }}
						className="flex flex-col justify-center items-center"
					>
						<p style={{ color: "#6ee06e", marginBottom: "-5px" }}>Email</p>
						<p style={{ color: "#6ee06e", marginBottom: "10px" }}>
							{"<bbabines@gmail.com>"}
						</p>
					</div>
				</Html>
			)}
			<group name="Scene">
				<ModalText
					text={"contact"}
					position={[-2, 40, 326.338]}
					sign={"contact"}
				/>

				<group
					name="Sketchfab_model"
					position={[-7.476, -1, 326.338]}
					rotation={[-1.573, 0, 1.549]}
					scale={1.623}
					onClick={() => {
						setSignSelected("contact");
					}}
					onPointerOver={() => {
						setHovered(true);
						setHoverText("contact");
						setMailboxText("mailbox");
						event.stopPropagation();
					}}
					onPointerOut={() => {
						setHovered(false);
						setHoverText("");
						setMailboxText("");
					}}
				>
					{/* Invisible Mailbox Physics */}
					<RigidBody type="fixed" includeInvisible>
						<mesh position={[0, 0, 3]} visible={false}>
							<boxGeometry args={[3, 3, 5]} />
							<meshStandardMaterial color="mediumpurple" />
						</mesh>
					</RigidBody>
					<group name="8dcf7793a439444f949b6c43d8fb76b1objcleanermaterialmergergle">
						<mesh
							name="Object_10003"
							castShadow
							receiveShadow
							geometry={nodes.Object_10003.geometry}
							material={materials.Top_box}
						/>
						<mesh
							name="Object_11001"
							castShadow
							receiveShadow
							geometry={nodes.Object_11001.geometry}
							material={materials.Wood_top_thing}
						/>
						<mesh
							name="Object_12002"
							castShadow
							receiveShadow
							geometry={nodes.Object_12002.geometry}
							material={materials.box_design}
						/>
						<mesh
							name="Object_13"
							castShadow
							receiveShadow
							geometry={nodes.Object_13.geometry}
							material={materials.hook_holder}
						/>
						<mesh
							name="Object_14002"
							castShadow
							receiveShadow
							geometry={nodes.Object_14002.geometry}
							material={materials.wood_top_base}
						/>
						<mesh
							name="Object_2001"
							castShadow
							receiveShadow
							geometry={nodes.Object_2001.geometry}
							material={materials.Bot_Box}
						/>
						<mesh
							name="Object_3"
							castShadow
							receiveShadow
							geometry={nodes.Object_3.geometry}
							material={materials.Bot_stand}
						/>
						<mesh
							name="Object_4006"
							castShadow
							receiveShadow
							geometry={nodes.Object_4006.geometry}
							material={materials.Cloth}
						/>
						<mesh
							name="Object_5003"
							castShadow
							receiveShadow
							geometry={nodes.Object_5003.geometry}
							material={materials.Cloth_Edge}
						/>
						<mesh
							name="Object_6003"
							castShadow
							receiveShadow
							geometry={nodes.Object_6003.geometry}
							material={materials.Hook_Base}
						/>
						<mesh
							name="Object_7002"
							castShadow
							receiveShadow
							geometry={nodes.Object_7002.geometry}
							material={materials.Hook_Main}
						/>
						<mesh
							name="Object_8003"
							castShadow
							receiveShadow
							geometry={nodes.Object_8003.geometry}
							material={materials.Ring}
						/>
						<mesh
							name="Object_9002"
							castShadow
							receiveShadow
							geometry={nodes.Object_9002.geometry}
							material={materials.Sign}
						/>
					</group>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("/prunedMailbox.glb");
